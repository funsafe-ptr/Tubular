name: "Build release APK on fork"

on:
  workflow_dispatch:
  push:
    branches:
      - fork
    paths-ignore:
      - 'README.md'
      - 'doc/**'
      - 'fastlane/**'
      - 'assets/**'
      - '.github/**/*.md'
      - '.github/FUNDING.yml'
      - '.github/ISSUE_TEMPLATE/**'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'fork'

      # TODO: build cache
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: "Build release APK"
        run: |
          ./gradlew assembleRelease --stacktrace --build-cache
          ./gradlew --stop
          pkill -f '.*GradleDaemon.*'

      - name: "Rename APK"
        run: |
          VERSION_NAME="$(jq -r ".elements[0].versionName" "app/build/outputs/apk/release/output-metadata.json")"
          echo "Version name: $VERSION_NAME" >> "$GITHUB_STEP_SUMMARY"
          echo '```json' >> "$GITHUB_STEP_SUMMARY"
          cat "app/build/outputs/apk/release/output-metadata.json" >> "$GITHUB_STEP_SUMMARY"
          echo >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          # assume there is only one APK in that folder
          # mv app/build/outputs/apk/release/*.apk "app/build/outputs/apk/release/NewPipe_v$VERSION_NAME.apk"

      # keytool -genkey -v -keystore ci.keystore -alias ci -keyalg RSA -keysize 2048 -validity 99999 -dname "CN=CI, OU=CI, O=CI, L=CI, ST=CI, C=CI" -storepass password -keypass password
      # base64 ci.keystore | gh secret set KEYSTORE --repo funsafe-ptr/Tubular
      # echo password | gh secret set SIGNING_STORE_PASSWORD --repo funsafe-ptr/Tubular
      - name: Sign APK
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: |
          version=$( grep "versionName" app/build.gradle | awk -F'"' '{print $2}' )
          echo "${KEYSTORE}" | base64 -d > apksign.keystore
          ${ANDROID_HOME}/build-tools/34.0.0/apksigner sign --ks apksign.keystore --ks-pass env:SIGNING_STORE_PASSWORD "app/build/outputs/apk/release/app-release-unsigned.apk"
          mv app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/tubularfork_ci.apk

      - name: release apk
        run: |
          version=$( grep "versionName" app/build.gradle | awk -F'"' '{print $2}' )
          gh auth login --with-token <<<"${{ secrets.GITHUB_TOKEN }}"
          # gh release delete "v${version}" -y || true
          gh release delete "CI" -y || true
          gh release create "CI" --title "CI" --prerelease=true --notes-file ".github/fork.md"  --repo funsafe-ptr/Tubular
          gh release upload "CI" app/build/outputs/apk/release/*.apk --repo funsafe-ptr/Tubular --clobber

      - name: "Upload APK"
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app/build/outputs/apk/release/*.apk
